<?php if ( ! defined('SITEPHP')) exit('No direct script access allowed');

class Order extends Member_Controller {
	public function __construct()
	{
		parent::__construct();
		$this->load->model('a_member_model');
		$this->tb_price='goods_price_library';
		$this->user_id=isset($this->session->userdata['member_user_id'])?$this->session->userdata['member_user_id']:0;
	}
	//订单列表--shuangniao
	public function lists() {
		$this->seo_title = '会员中心-我的订单';
		$this->seo_keywords='会员中心';
	  $this->seo_description='会员中心';
	  $data['heading_title'] = '我的订单';
	  $user_id = $this->session->userdata['member_user_id'];
	  $this->load->model('user');
	  $data['userInfo'] = $this->user->get_one(array('user_id'=>$this->user_id), 'user');
	  $data['groupInfo'] = $this->user->get_one(array('id' => $data['userInfo']['group']),'user_group');
	    
	  $status = $this->input->get('status');
	  $search_name = $this->input->get_post ( 'search_name' );
		$data['status'] = $status?$status:0;
	
		
	  $page=$this->input->get('page');
		$page=intval($page)>0?$page:1;

		$sel['buyer_id']=$user_id;
		$sel['page']=$page;
	  $sel['pagesize']=10;
		$sel['status']=$status;
		$sel['search_name'] = $search_name;

		$list = $this->a_member_model->get_order_search($sel);
		foreach ($list['list'] as $key=>$value) {
			$list['list'][$key]['order_state_name']=$this->getStatusName($value['order_state']);
			$list_goodsdata = $this->a_member_model->get_query(array('order_id'=>$value['order_id']), 'order_goods');
			$numb_goodsdata = count($list_goodsdata);
			foreach($list_goodsdata as $kk => $vv){
				$tonsspec_id = $vv['spec_id'];
				//获取价格库中规则名称
				$tonsspec_info=$this->a_member_model->get_one(array('id' => $tonsspec_id),$this->tb_price);
				$list_goodsdata[$kk]['goods_tons']=empty($tonsspec_info['prod_spec']) ? '' : $tonsspec_info['prod_spec'];
			}
			$list['list'][$key]['goodsdata'] = $list_goodsdata;
			$list['list'][$key]['goodsnumb'] = $numb_goodsdata;
	  }
	  $data['list'] = $list['list'];
	  $data['page'] = $list['page'];
	  $this->view('order_list', $data);
	}
	//订单详情--shuangniao
	public function info() {
		$this->seo_title = '会员中心-订单详情';
		$this->seo_keywords='会员中心';
	  $this->seo_description='会员中心';
	  $order_id=$this->input->get('id');
		
		$order_info=$this->a_member_model->get_one(array('order_id'=>$order_id),'order');
		if (empty($order_info)) {
			redirect(base_url().'index.php?m=member&c=order&a=lists');
		}
		
		$area_info=$this->a_member_model->get_one(array('oadd_id'=>$order_id),'order_address');
		$order_info['state_name']=$this->getStatusName($order_info['order_state']);
		$goods_info=$this->a_member_model->get_query(array('order_id'=>$order_id),'order_goods');
		foreach($goods_info as $k => $v){
					$tonsspec_id = $v['spec_id'];
					//获取价格库中规则名称
					$tonsspec_info=$this->a_member_model->get_one(array('id' => $tonsspec_id),$this->tb_price);
					$goods_info[$k]['spec_name']=empty($tonsspec_info['prod_spec']) ? '' : $tonsspec_info['prod_spec'];
		}
		
		$data['order_info']=$order_info;
		$data['goods_info']=$goods_info;		
		$data['area_info']=$area_info;
		$this->view('order_info', $data);
	}
	//退货--shuangniao
	public function refund(){
		$this->seo_title = '会员中心-申请退货';
		$this->seo_keywords='会员中心';
	  $this->seo_description='会员中心';
	  if(isset($_POST['dosubmit']) && $_POST['dosubmit']=='ok') {
	  	$goods_id = $this->input->post('goods_id');//商品id
	  	$order_id = $this->input->post('order_id');//订单ID
	  	$rec_id = $this->input->post('rec_id');//订单ID
	  	$return_num = $this->input->post('changequantity');
	 		$goods_info=$this->a_member_model->get_one(array('goods_id' => $goods_id,'order_id' => $order_id),'order_goods');
	 		$order_info=$this->a_member_model->get_one(array('order_id' => $order_id),'order');
			$returns_state = 0;
			if($return_num < $goods_info['goods_num']){
				$returns_state = 1;
			}
			if($return_num == $goods_info['goods_num']){
				$returns_state = 2;
			}
	 		$num_left = $goods_info['goods_num'] - $return_num;
	 		//更新订单产品的状态和数量
	   	$this->a_member_model->update(array('rec_id' => $rec_id),array('returns_state' => $returns_state,'goods_num' => $num_left),'order_goods');
	   	//更新退货标记
	   	$this->a_member_model->update(array('order_id' => $order_id),array('re_state' => 1),'order');
			//添加退货记录
			$arr['buyer_message']=$this->input->post('buyer_message');//退货留言
	 		$arr['add_time']=time();//申请时间
	 		$arr['return_sn']=uniqid();//退货编号
	 		$arr['order_id'] = $order_id;
	 		$arr['goods_id'] = $goods_id;
	 		$arr['rec_id'] = $rec_id;
	 		$arr['order_sn'] = $order_info['order_sn'];
	 		$arr['user_id'] = $order_info['buyer_id'];
	 		$arr['buyer_name'] = $order_info['buyer_name'];
	 		$arr['return_goodsnum'] = $this->input->post('changequantity');
	 		$res=$this->a_member_model->add($arr,'returns');
    
      redirect(base_url()."index.php?m=member&c=order&a=order_returns&oid=".$arr['order_id']);
		} else {
			$order_id=$this->input->get('oid');
	  	$goods_id=$this->input->get('gid');
	  	$rec_id=$this->input->get('id');
	  	$order_info=$this->a_member_model->get_one(array('order_id' => $order_id),'order');
	  	if (empty($order_info)) {
				redirect(base_url().'index.php?m=member&c=order&a=lists');
			}
	  	$goods_info=$this->a_member_model->get_one(array('rec_id' => $rec_id),'order_goods');
	  	if (empty($goods_info)) {
				redirect(base_url().'index.php?m=member&c=order&a=lists');
			}
			if($order_info['order_state'] == 10){
				$data['msg'] = '您的订单还未付款！';
				$this->showmessage('error',$data['msg'],HTTP_REFERER);
			}
			if($order_info['order_state'] == 50){
				$data['msg'] = '您的订单已被取消！';
				$this->showmessage('error',$data['msg'],HTTP_REFERER);
			}
			if($order_info['re_state'] == 1){
				$data['msg'] = '退货正在处理中!';
				$this->showmessage('error',$data['msg'],HTTP_REFERER);
			}
			$tonsspec_id = $goods_info['spec_id'];
			//获取价格库中规则名称
			$tonsspec_info=$this->a_member_model->get_one(array('id' => $tonsspec_id),$this->tb_price);
			$goods_info['spec_name']=empty($tonsspec_info['prod_spec']) ? '' : $tonsspec_info['prod_spec'];
					
	  	$data['order_info']=$order_info;
			$data['goods_info']=$goods_info;
			$this->view('refund_add', $data);
		}
	}
	//退货列表--shuangniao
	public function order_returns(){
	    $this->seo_title = '会员中心-退货管理';
			$this->seo_keywords='会员中心';
	    $this->seo_description='首页';

	    $sel['user_id'] = $this->session->userdata['member_user_id'];
	    $sel['order_id']=$this->input->get('oid');
	    $sel['goods_id']=$this->input->get('gid');
      $page=$this->input->get('page');
			$page=intval($page)>0?$page:1;
      $sel['page']=$page;
	    $sel['pagesize']=5;	
     	$list=$this->a_member_model->get_returns($sel);
     	foreach($list['list'] as $k => $v){
     		$list['list'][$k]['state_name']=$this->getRefundName($v['re_state']);
     	}
     	$data['return_info'] = $list;
			$data['order_id']=$sel['order_id'];
			$data['user_id']=$sel['user_id'];
      $this->view('order_returns', $data);
	}
	//退货详情--shuangniao
	public function viewrefund(){
		$this->seo_title = '会员中心-退货详情';
		$this->seo_keywords='会员中心';
	  $this->seo_description='会员中心';
	  $return_id=$this->input->get('rid');
	  $return_info=$this->a_member_model->get_one(array('returns_id' => $return_id),'returns');
	  $rec_id = empty($return_info['rec_id']) ? 0 :$return_info['rec_id'];
		if (empty($return_info)) {
			redirect(base_url().'index.php?m=member&c=order&a=order_returns');
		}
		$order_goodsinfo = $this->a_member_model->get_one(array('rec_id' => $rec_id),'order_goods');
		$tonsspec_id = $order_goodsinfo['spec_id'];
		//获取价格库中规则名称
		$tonsspec_info=$this->a_member_model->get_one(array('id' => $tonsspec_id),$this->tb_price);
		$order_goodsinfo['spec_name']=empty($tonsspec_info['prod_spec']) ? '' : $tonsspec_info['prod_spec'];
		$order_goodsinfo['state_name']=$this->getRefundName($return_info['re_state']);
		$data['return_info']=$return_info;
		$data['goods_info']=$order_goodsinfo;		
		$this->view('refund_info', $data);
	}
	//退货取消
	public function canrefund(){
		$return_id=$this->input->get('rid');
		$arr = array('re_state' => 0);
		$this->a_member_model->update(array('returns_id' => $return_id), $arr, 'returns');
		$this->showmessage('success','退货订单取消成功!',HTTP_REFERER);
		return;
	}
	
	//退货--shuangniao
	public function fix(){
		$this->seo_title = '会员中心-申请退货';
		$this->seo_keywords='会员中心';
	  $this->seo_description='会员中心';
	  if(isset($_POST['dosubmit']) && $_POST['dosubmit']=='ok') {
	  	$goods_id = $this->input->post('goods_id');//商品id
	  	$order_id = $this->input->post('order_id');//订单ID
	  	$rec_id = $this->input->post('rec_id');//订单ID
	 		$goods_info=$this->a_member_model->get_one(array('goods_id' => $goods_id,'order_id' => $order_id),'order_goods');
	 		$order_info=$this->a_member_model->get_one(array('order_id' => $order_id),'order');

	 		$returns_state='1';
	   	$this->a_member_model->update(array('rec_id' => $rec_id),array('returns_state' => $returns_state),'order_goods');
			$arr['buyer_message']=$this->input->post('buyer_message');//退货留言
	 		$arr['add_time']=time();//申请时间
	 		$arr['return_sn']=uniqid();//退货编号
	 		$arr['order_id'] = $order_id;
	 		$arr['goods_id'] = $goods_id;
	 		$arr['rec_id'] = $rec_id;
	 		$arr['order_sn'] = $order_info['order_sn'];
	 		$arr['user_id'] = $order_info['buyer_id'];
	 		$arr['buyer_name'] = $order_info['buyer_name'];
	 		$arr['return_goodsnum'] = $this->input->post('changequantity');
	 		$res=$this->a_member_model->add($arr,'fix');

      redirect(base_url()."index.php?m=member&c=order&a=order_fix&oid=".$arr['order_id']);
		} else {
			$order_id=$this->input->get('oid');
	  	$goods_id=$this->input->get('gid');
	  	$rec_id=$this->input->get('id');
	  	$order_info=$this->a_member_model->get_one(array('order_id' => $order_id),'order');
	  	if (empty($order_info)) {
				redirect(base_url().'index.php?m=member&c=order&a=lists');
			}
	  	$goods_info=$this->a_member_model->get_one(array('rec_id' => $rec_id),'order_goods');
	  	if (empty($goods_info)) {
				redirect(base_url().'index.php?m=member&c=order&a=lists');
			}
			$tonsspec_id = $goods_info['spec_id'];
			//获取价格库中规则名称
			$tonsspec_info=$this->a_member_model->get_one(array('id' => $tonsspec_id),$this->tb_price);
			$goods_info['spec_name']=empty($tonsspec_info['prod_spec']) ? '' : $tonsspec_info['prod_spec'];
					
	  	$data['order_info']=$order_info;
			$data['goods_info']=$goods_info;
			$this->view('fix_add', $data);
		}
	}
	//退货列表--shuangniao
	public function order_fix(){
	    $this->seo_title = '会员中心-退货管理';
			$this->seo_keywords='会员中心';
	    $this->seo_description='首页';

	    $sel['user_id'] = $this->session->userdata['member_user_id'];
	    $sel['order_id']=$this->input->get('oid');
	    $sel['goods_id']=$this->input->get('gid');
      $page=$this->input->get('page');
			$page=intval($page)>0?$page:1;
      $sel['page']=$page;
	    $sel['pagesize']=5;	
     	$list=$this->a_member_model->get_fix($sel);
     	foreach($list['list'] as $k => $v){
     		$list['list'][$k]['state_name']=$this->getRefundName($v['re_state']);
     	}
     	$data['return_info'] = $list;
			$data['order_id']=$sel['order_id'];
			$data['user_id']=$sel['user_id'];
      $this->view('order_fix', $data);
	}
	//退货详情--shuangniao
	public function viewfix(){
		$this->seo_title = '会员中心-退货详情';
		$this->seo_keywords='会员中心';
	  $this->seo_description='会员中心';
	  $return_id=$this->input->get('rid');
	  $return_info=$this->a_member_model->get_one(array('returns_id' => $return_id),'returns');
	  $rec_id = empty($return_info['rec_id']) ? 0 :$return_info['rec_id'];
		if (empty($return_info)) {
			redirect(base_url().'index.php?m=member&c=order&a=order_returns');
		}
		$order_goodsinfo = $this->a_member_model->get_one(array('rec_id' => $rec_id),'order_goods');
		$tonsspec_id = $order_goodsinfo['spec_id'];
		//获取价格库中规则名称
		$tonsspec_info=$this->a_member_model->get_one(array('id' => $tonsspec_id),$this->tb_price);
		$order_goodsinfo['spec_name']=empty($tonsspec_info['prod_spec']) ? '' : $tonsspec_info['prod_spec'];
		$order_goodsinfo['state_name']=$this->getRefundName($return_info['re_state']);
		$data['return_info']=$return_info;
		$data['goods_info']=$order_goodsinfo;		
		$this->view('fix_info', $data);
	}
	//退货取消
	public function canfix(){
		$return_id=$this->input->get('rid');
		$arr = array('re_state' => 0);
		$this->a_member_model->update(array('returns_id' => $return_id), $arr, 'returns');
		$this->showmessage('success','退货订单取消成功!',HTTP_REFERER);
		return;
	}
	
	public function state_next(){
	    $orderSn = $this->input->get('orderSn');
		$state = $this->input->get('state');
		$user_id = $this->session->userdata['member_user_id'];
	    $res=$this->a_member_model->update(array('order_sn'=>$orderSn, 'buyer_id'=>$user_id, 'order_state'=>$state, 'sts'=>0), array('order_state'=>'40'), 'order');
        if($res>0){
		    $arr['msg'] = 'success';
		}else{
	    	$arr['msg'] = 'fail';
		}
		echo json_encode($arr);
	
	
	
	
	}
	
	//订单状态：10(默认):未付款;11:待收款 20:已审核;30:已发货;40:已收货;50:取消;60已确认;
	function getStatusName($state = '10') {
		$data = array(
			'10' => '未付款',
			'11' => '待收款',
			'20' => '已审核',
			'30' => '已发货',
			'40' => '已收货',
			'50' => '已取消',
			'60' => '已完成',
		);
		return isset($data[$state]) ? $data[$state] : '未知的状态';
	}
	
	//退货状态:0（取消）：1(默认-未审核):2（不通过）：3（通过）：4（完结）
	function getRefundName($state = 1){
		$data = array(
			'0' => '取消',
			'1' => '未审核',
			'2' => '不通过',
			'3' => '通过',
			'4' => '完结'
		);
		return isset($data[$state]) ? $data[$state] : '未知状态';
	}
	
}